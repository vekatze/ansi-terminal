import {
  core.control {loop},
  core.file.descriptor {stdout},
  this.move.flush {flush},
  this.move.make-ansi-kit {make-ansi-kit, make-ansi-kit-unbuffered},
  this.move.write {write, write-code},
  this.rule.ansi-kit {ansi-kit},
  this.rule.color {Color-16, Color-256, Color-RGB},
  this.rule.color-ansi {
    Black,
    Blue,
    Cyan,
    Green,
    Magenta,
    Red,
    White,
    Yellow,
  },
  this.rule.color-intensity {Dull, Vivid},
  this.rule.color-layer {Background, Foreground},
  this.rule.command {Erase, Move-Cursor, Set-Style},
  this.rule.cursor-movement {Backward, To-Column},
  this.rule.space {Line},
  this.rule.span {From-Cursor, To-Cursor, Whole},
  this.rule.style {Bold, Color, Faint, Italic, Normal, Underline},
}

define _write-space(k: &ansi-kit): unit {
  write(k, " ");
  write-code(k, Set-Style(Normal))
}

define _write-X(k: &ansi-kit): unit {
  write(k, "X");
  write-code(k, Set-Style(Normal))
}

define _write-XX(k: &ansi-kit): unit {
  write(k, "XX");
  write-code(k, Set-Style(Normal));
  write(k, " ")
}

define _test-color-foreground-dull(k: &ansi-kit): unit {
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Black))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Red))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Green))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Yellow))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Blue))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Magenta))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, Cyan))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Dull, White))));
  _write-XX(k)
}

define _test-color-background-dull(k: &ansi-kit): unit {
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Black))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Red))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Green))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Yellow))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Blue))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Magenta))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, Cyan))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Dull, White))));
  _write-XX(k)
}

define _test-color-foreground-vivid(k: &ansi-kit): unit {
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Black))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Red))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Green))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Yellow))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Blue))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Magenta))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Cyan))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, White))));
  _write-XX(k)
}

define _test-color-background-vivid(k: &ansi-kit): unit {
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Black))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Red))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Green))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Yellow))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Blue))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Magenta))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, Cyan))));
  _write-XX(k);
  write-code(k, Set-Style(Color(Background, Color-16(Vivid, White))));
  _write-XX(k)
}

define _test-256(k: &ansi-kit): unit {
  loop(256, function (i) {
    write-code(k, Set-Style(Color(Background, Color-256(trunc-int-int8(i)))));
    _write-space(k);
    when eq-int(rem-int(add-int(i, 1), 16), 0) {
      write(k, "\n")
    }
  });
  write(k, "\n");
  flush(k);
}

define _test-rgb(k: &ansi-kit): unit {
  write-code(k, Set-Style(Color(Background, Color-RGB(255, 0, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 255, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 0, 255))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(255, 255, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(255, 0, 255))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 255, 255))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(255, 255, 255))));
  _write-space(k);
  write(k, "\n");
  write-code(k, Set-Style(Color(Background, Color-RGB(128, 0, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 128, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 0, 128))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(128, 128, 0))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(128, 0, 128))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(0, 128, 128))));
  _write-space(k);
  write-code(k, Set-Style(Color(Background, Color-RGB(128, 128, 128))));
  _write-space(k);
  write(k, "\n");
  write-code(k, Set-Style(Color(Foreground, Color-RGB(255, 0, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 255, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 0, 255))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(255, 255, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(255, 0, 255))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 255, 255))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(255, 255, 255))));
  _write-X(k);
  write(k, "\n");
  write-code(k, Set-Style(Color(Foreground, Color-RGB(128, 0, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 128, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 0, 128))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(128, 128, 0))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(128, 0, 128))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(0, 128, 128))));
  _write-X(k);
  write-code(k, Set-Style(Color(Foreground, Color-RGB(128, 128, 128))));
  _write-X(k);
  write(k, "\n");
  flush(k);
}

define _test-color(k: &ansi-kit): unit {
  write-code(k, Set-Style(Normal));
  _write-XX(k);
  write-code(k, Set-Style(Bold));
  _write-XX(k);
  write-code(k, Set-Style(Faint));
  _write-XX(k);
  write-code(k, Set-Style(Italic));
  _write-XX(k);
  write-code(k, Set-Style(Underline));
  _write-XX(k);
  write(k, "\n");
  _test-color-foreground-dull(k);
  write(k, "\n");
  _test-color-background-dull(k);
  write(k, "\n");
  _test-color-foreground-vivid(k);
  write(k, "\n");
  _test-color-background-vivid(k);
  write(k, "\n");
  write(k, "123456789");
  flush(k);
  write-code(k, Erase(Line, Whole));
  write-code(k, Move-Cursor(To-Column(0)));
  write(k, "123456789");
  write-code(k, Move-Cursor(Backward(5)));
  flush(k);
  write-code(k, Erase(Line, From-Cursor));
  write(k, "\n");
  write(k, "123456789");
  write-code(k, Move-Cursor(Backward(5)));
  flush(k);
  write-code(k, Erase(Line, To-Cursor));
  flush(k);
  write(k, "\n");
  write(k, "hello, world!\n");
  flush(k)
}

define some-func(): unit {
  pin k = make-ansi-kit of {sink := stdout, capacity := 100};
  // prints "error: " in bold red
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Red))));
  write-code(k, Set-Style(Bold));
  write(k, "error: ");
  write-code(k, Set-Style(Normal));
  // prints "Lorem.." in plain text
  write(k, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n");
  // prints "hint: " in bold blue
  write-code(k, Set-Style(Color(Foreground, Color-16(Vivid, Blue))));
  write-code(k, Set-Style(Bold));
  write(k, "hint: ");
  // prints "くらきより.." in plain text
  write-code(k, Set-Style(Normal));
  write(k, "くらきよりくらきみちにぞいりぬべきはるかにてらせやまのはのつき\n");
  flush(k);
}

define zen(): unit {
  pin k1 = make-ansi-kit of {sink := stdout, capacity := 100};
  pin k2 = make-ansi-kit-unbuffered of {sink := stdout};
  _test-256(k1);
  _test-256(k2);
  _test-rgb(k1);
  _test-rgb(k2);
  _test-color(k1);
  _test-color(k2);
  some-func();
}

define main(): unit {
  zen();
}
